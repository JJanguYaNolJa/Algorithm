import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;

public class gptHamtori {

    public static void main(String[] args) throws Exception {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();

        int T = Integer.parseInt(in.readLine());

        for (int t = 1; t <= T; t++) {
            sb.append("#").append(t).append(" ");
            StringTokenizer st = new StringTokenizer(in.readLine(), " ");
            int woori = Integer.parseInt(st.nextToken());
            int limit = Integer.parseInt(st.nextToken());
            int tc = Integer.parseInt(st.nextToken());
            int[][] line = new int[tc][3];
            int[] result = new int[woori];
            boolean possible = true;

            for (int i = 0; i < tc; i++) {
                st = new StringTokenizer(in.readLine(), " ");
                line[i][0] = Integer.parseInt(st.nextToken());
                line[i][1] = Integer.parseInt(st.nextToken());
                line[i][2] = Integer.parseInt(st.nextToken());
            }

            Arrays.sort(line, Comparator.comparingInt(o -> o[1])); // 구간 끝 기준 오름차순 정렬

            for (int i = 0; i < line.length; i++) {
                int start = line[i][0] - 1;
                int end = line[i][1] - 1;
                int value = line[i][2];

                for (int j = end; j >= start && value > 0; j--) {
                    int add = Math.min(limit - result[j], value);
                    result[j] += add;
                    value -= add;
                }

                if (value > 0) {
                    possible = false;
                    sb.append("-1\n");
                    break;
                }
            }

            if (possible) {
                for (int i = 0; i < result.length; i++) {
                    sb.append(result[i]).append(" ");
                }
                sb.append("\n");
            }
        }
        System.out.print(sb);
    }
}
